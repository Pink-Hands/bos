package pers.test.bos.web.action;

import org.apache.struts2.ServletActionContext;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import java.io.IOException;
import org.apache.commons.lang3.StringUtils;
import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.AuthenticationToken;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.subject.Subject;

import pers.test.bos.domain.TUser;
import pers.test.bos.service.IUserService;
import pers.test.bos.utils.BOSUtils;
import pers.test.bos.utils.MD5Utils;
import pers.test.bos.web.action.base.BaseAction;

@Controller // 控制器
@Scope("prototype") // 多例
public class UserAction extends BaseAction<TUser> {

	private String checkcode;// 接收验证码

	public void setCheckcode(String checkcode) {
		this.checkcode = checkcode;
	}

	@Autowired
	private IUserService userService;

	/**
	 * 处理登录界面,使用shiro框架提供的方式
	 */
	public String login() {
		// 取出验证码
		String validdatecode = (String) ServletActionContext.getRequest().getSession().getAttribute("key");
		if (StringUtils.isNotBlank(checkcode) && checkcode.equalsIgnoreCase(validdatecode)) {
			Subject subject = SecurityUtils.getSubject();//获得当前登录用户对象
			AuthenticationToken token = new UsernamePasswordToken(model.getUsername(), MD5Utils.md5(model.getPassword()));
			try {
				subject.login(token);//跳转到BOSRealm进行认证,如果认证失败会抛出异常
				TUser user = (TUser) subject.getPrincipal();//取出user
				ServletActionContext.getRequest().getSession().setAttribute("loginUser", user);//放入session
			} catch (AuthenticationException e) {
				e.printStackTrace();
				return LOGIN;
			}
			return HOME;
		} else {
			// 验证码错误,提示后跳转回登录页面
			this.addActionError("输入的验证码错误!");
			return LOGIN;
		}
	}

	/**
	 * 注销
	 */
	public String logout() {
		ServletActionContext.getRequest().getSession().invalidate();
		return LOGIN;
	}
	
	/**
	 * 修改密码
	 */
	public String editPassword() throws IOException {
		String f = "1";
		//获取当前用户
		TUser user = BOSUtils.getLoginUser();
		try {
			userService.editPassword(user.getId(),model.getPassword());
		} catch (Exception e) {
			f = "0";
			e.printStackTrace();
		}
		ServletActionContext.getResponse().setContentType("text/html;charset=utf-8");//告知返回的f是字符串而不是对象
		ServletActionContext.getResponse().getWriter().printf(f);
		return NONE;
	}
	
	private String[] roleIds;
	
	public void setRoleIds(String[] roleIds) {
		this.roleIds = roleIds;
	}

	/**
	 * 保存用户
	 */
	public String add() {
		userService.save(model,roleIds);
		return LIST;
	}
	
	/**
	 * 分页查询
	 */
	public String pageQuery() {
		userService.pageQuery(pageBean);
		this.java2Json(pageBean, new String[] {"qpNoticebills","authRoles","birthday"});
		return NONE;
	}
	
	
}
