<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:soap="http://cxf.apache.org/bindings/soap"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://cxf.apache.org/bindings/soap 
						http://cxf.apache.org/schemas/configuration/soap.xsd
						http://cxf.apache.org/jaxws 
						http://cxf.apache.org/schemas/jaxws.xsd
						">

	<!-- 加载属性文件 -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- <property name="url" value="jdbc:mysql://localhost:3306/how2java?characterEncoding=UTF-8" /> <property name="username" 
			value="root" /> <property name="password" value="admin" /> <property name="driverClassName" value="com.mysql.jdbc.Driver" 
			/> -->
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- 配置LocalSessionFactoryBean，spring提供的用于整合hibernate的工厂bean -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 注入hibernate相关的属性配置 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		<!-- 注入hibernate的映射文件 -->
		<property name="mappingLocations">
			<list>
				<value>classpath:pers/test/bos/domain/*.xml</value>
			</list>
		</property>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 组件扫描 -->
	<context:component-scan base-package="pers.test.bos" />

	<!-- 支持spring注解 -->
	<context:annotation-config />

	<tx:annotation-driven />

	<!-- 注册crm客户代理对象 -->
	<jaxws:client id="crmClient" serviceClass="pers.test.crm.ICustomerService" address="http://localhost:8080/crm_bos32/service/customer" />

	<!-- 配置shiro框架的过滤器工厂对象 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 注入安全管理器对象 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 设置相应页面跳转 -->
		<property name="loginUrl" value="/login.jsp" />
		<property name="successUrl" value="/index.jsp" />
		<property name="unauthorizedUrl" value="/unauthorized.jsp" />
		<!-- 注入URL拦截规则 anon 不用登录也可以访问,perms 权限校验,authc 登录后才可以访问 -->
		<property name="filterChainDefinitions">
			<value>
				/css/** = anon
				/js/** = anon
				/validatecode.jsp* = anon
				/login.jsp = anon
				/userAction_login.action = anon
				/page_base_staff.action = perms["staff"]
				/staffAction_add.action = perms["staff-add"]
				/staffAction_deleteBatch.action = perms["staff-delete"]
				/staffAction_restoreBatch.action = perms["staff-restore"]
				/staffAction_edit.action = perms["staff-edit"]
				/* = authc
			</value>
		</property>
	</bean>

	<!-- 注册安全管理器对象 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 注入realm -->
		<property name="realm" ref="bosRealm" />
		<!-- 注入ehcache -->
		<property name="cacheManager" ref="cacheManager"/>
	</bean>

	<!-- 注册缓存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<!-- 注入ehcache配置文件 -->
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
	</bean>

	<!-- 注册realm -->
	<bean id="bosRealm" class="pers.test.bos.service.BOSRealm"></bean>


	<!-- 开启shiro框架注解支持 -->
	<bean id="DefaultAdvisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<!-- 必须使用CGLIB方式为Action对象创建代理对象,CGLIB为代理对象的类创建,JDK为代理对象的接口创建 -->
		<property name="proxyTargetClass" value="true" />
	</bean>

	<!-- 配置shiro框架的切面类,用于创建代理对象 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor" />


	<!-- 配置定时邮件发送 -->
	<bean id="myJob" class="pers.test.jobs.MailJob">
		<property name="username" value="320255225@qq.com"/>
		<property name="password" value="invkhjmomxmzbidf"/>
		<property name="smtpServer" value="smtp.qq.com"/>
	</bean>

	<!-- 配置jobDetail -->
	<bean id="myJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<!-- 用到的Job实例 -->
		<property name="targetObject">
			<ref bean="myJob" />
		</property>
		<!-- Job实例中的方法 -->
		<property name="targetMethod">
			<value>execute</value>
		</property>
	</bean>

	<!-- 配置触发器Trigger -->
	<bean id="myTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="myJobDetail" />
		</property>
		<property name="cronExpression">
			<!-- 每天早上8点执行一次,秒 分 时 日 月 周 年 -->
			<value>0 0 8 * * ?</value>
		</property>
	</bean>

	<!-- 配置scheduler工厂 -->
	<bean id="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="myTrigger" />
			</list>
		</property>
	</bean>
</beans>